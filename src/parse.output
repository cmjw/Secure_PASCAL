Terminals unused in grammar

    CASE
    DOWNTO
    FILEFILE
    FUNCTION
    PACKED
    PROCEDURE
    SET
    WITH
    thenthen


State 157 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENTIFIER LPAREN id_list RPAREN SEMICOLON lblock DOT

    2 unsigned_constant: NUMBER
    3                  | NIL
    4                  | STRING

    5 sign: PLUS
    6     | MINUS

    7 constant: sign IDENTIFIER
    8         | IDENTIFIER
    9         | sign NUMBER
   10         | NUMBER
   11         | STRING

   12 id_list: IDENTIFIER COMMA id_list
   13        | IDENTIFIER

   14 numlist: NUMBER COMMA numlist
   15        | NUMBER

   16 cdef: IDENTIFIER EQ constant

   17 cdef_list: cdef SEMICOLON cdef_list
   18          | cdef SEMICOLON

   19 tdef: IDENTIFIER EQ type

   20 tdef_list: tdef SEMICOLON tdef_list
   21          | tdef SEMICOLON

   22 statement_list: statement SEMICOLON statement_list
   23               | statement

   24 fields: id_list COLON type

   25 field_list: fields SEMICOLON field_list
   26           | fields

   27 label: NUMBER COLON statement

   28 lblock: LABEL numlist SEMICOLON cblock
   29       | cblock

   30 cblock: CONST cdef_list tblock
   31       | tblock

   32 tblock: TYPE tdef_list vblock
   33       | vblock

   34 vblock: VAR vdef_list block
   35       | block

   36 vdef_list: vdef SEMICOLON vdef_list
   37          | vdef SEMICOLON

   38 vdef: id_list COLON type

   39 type: simple_type
   40     | ARRAY LBRACKET simple_type_list RBRACKET OF type
   41     | RECORD field_list END
   42     | POINT IDENTIFIER

   43 simple_type_list: simple_type COMMA simple_type_list
   44                 | simple_type

   45 simple_type: IDENTIFIER
   46            | LPAREN id_list RPAREN
   47            | constant DOTDOT constant

   48 block: BEGINBEGIN statement endpart
   49      | privblock

   50 privblock: PRIV DOUBLECOLON BEGINBEGIN statement endpart

   51 statement: BEGINBEGIN statement endpart
   52          | IF expression THEN statement endif
   53          | assignment
   54          | funcall
   55          | WHILE expression DO statement
   56          | FOR assignment TO expression DO statement
   57          | REPEAT statement_list UNTIL expression
   58          | GOTO NUMBER
   59          | label
   60          | privblock

   61 funcall: IDENTIFIER LPAREN expr_list RPAREN

   62 endpart: SEMICOLON statement endpart
   63        | SEMICOLON END
   64        | END
   65        | PRIV DOUBLECOLON END
   66        | SEMICOLON PRIV DOUBLECOLON END

   67 endif: ELSE statement
   68      | %empty

   69 assignment: variable ASSIGN expression

   70 variable: IDENTIFIER
   71         | variable LBRACKET expr_list RBRACKET
   72         | variable DOT IDENTIFIER
   73         | variable POINT

   74 plus_op: PLUS
   75        | MINUS
   76        | OR

   77 compare_op: EQ
   78           | LT
   79           | GT
   80           | NE
   81           | LE
   82           | GE
   83           | IN

   84 times_op: TIMES
   85         | DIVIDE
   86         | DIV
   87         | MOD
   88         | AND

   89 simple_expression: sign term
   90                  | term
   91                  | simple_expression plus_op term

   92 expression: expression compare_op simple_expression
   93           | simple_expression

   94 expr_list: expression COMMA expr_list
   95          | expression

   96 term: term times_op factor
   97     | factor

   98 factor: unsigned_constant
   99       | variable
  100       | LPAREN expression RPAREN
  101       | funcall
  102       | NOT factor


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 1 7 8 12 13 16 19 42 45 61 70 72
    STRING (259) 4 11
    NUMBER (260) 2 9 10 14 15 27 58
    PLUS (261) 5 74
    MINUS (262) 6 75
    TIMES (263) 84
    DIVIDE (264) 85
    ASSIGN (265) 69
    EQ (266) 16 19 77
    NE (267) 80
    LT (268) 78
    LE (269) 81
    GE (270) 82
    GT (271) 79
    POINT (272) 42 73
    DOT (273) 1 72
    AND (274) 88
    OR (275) 76
    NOT (276) 102
    DIV (277) 86
    MOD (278) 87
    IN (279) 83
    DOUBLECOLON (280) 50 65 66
    COMMA (281) 12 14 43 94
    SEMICOLON (282) 1 17 18 20 21 22 25 28 36 37 62 63 66
    COLON (283) 24 27 38
    LPAREN (284) 1 46 61 100
    RPAREN (285) 1 46 61 100
    LBRACKET (286) 40 71
    RBRACKET (287) 40 71
    DOTDOT (288) 47
    ARRAY (289) 40
    BEGINBEGIN (290) 48 50 51
    CASE (291)
    CONST (292) 30
    DO (293) 55 56
    DOWNTO (294)
    ELSE (295) 67
    END (296) 41 63 64 65 66
    FILEFILE (297)
    FOR (298) 56
    FUNCTION (299)
    GOTO (300) 58
    IF (301) 52
    LABEL (302) 28
    NIL (303) 3
    OF (304) 40
    PACKED (305)
    PROCEDURE (306)
    PROGRAM (307) 1
    RECORD (308) 41
    REPEAT (309) 57
    SET (310)
    THEN (311) 52
    TO (312) 56
    TYPE (313) 32
    UNTIL (314) 57
    VAR (315) 34
    WHILE (316) 55
    WITH (317)
    PRIV (318) 50 65 66
    thenthen (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1
        on right: 0
    unsigned_constant (67)
        on left: 2 3 4
        on right: 98
    sign (68)
        on left: 5 6
        on right: 7 9 89
    constant (69)
        on left: 7 8 9 10 11
        on right: 16 47
    id_list (70)
        on left: 12 13
        on right: 1 12 24 38 46
    numlist (71)
        on left: 14 15
        on right: 14 28
    cdef (72)
        on left: 16
        on right: 17 18
    cdef_list (73)
        on left: 17 18
        on right: 17 30
    tdef (74)
        on left: 19
        on right: 20 21
    tdef_list (75)
        on left: 20 21
        on right: 20 32
    statement_list (76)
        on left: 22 23
        on right: 22 57
    fields (77)
        on left: 24
        on right: 25 26
    field_list (78)
        on left: 25 26
        on right: 25 41
    label (79)
        on left: 27
        on right: 59
    lblock (80)
        on left: 28 29
        on right: 1
    cblock (81)
        on left: 30 31
        on right: 28 29
    tblock (82)
        on left: 32 33
        on right: 30 31
    vblock (83)
        on left: 34 35
        on right: 32 33
    vdef_list (84)
        on left: 36 37
        on right: 34 36
    vdef (85)
        on left: 38
        on right: 36 37
    type (86)
        on left: 39 40 41 42
        on right: 19 24 38 40
    simple_type_list (87)
        on left: 43 44
        on right: 40 43
    simple_type (88)
        on left: 45 46 47
        on right: 39 43 44
    block (89)
        on left: 48 49
        on right: 34 35
    privblock (90)
        on left: 50
        on right: 49 60
    statement (91)
        on left: 51 52 53 54 55 56 57 58 59 60
        on right: 22 23 27 48 50 51 52 55 56 62 67
    funcall (92)
        on left: 61
        on right: 54 101
    endpart (93)
        on left: 62 63 64 65 66
        on right: 48 50 51 62
    endif (94)
        on left: 67 68
        on right: 52
    assignment (95)
        on left: 69
        on right: 53 56
    variable (96)
        on left: 70 71 72 73
        on right: 69 71 72 73 99
    plus_op (97)
        on left: 74 75 76
        on right: 91
    compare_op (98)
        on left: 77 78 79 80 81 82 83
        on right: 92
    times_op (99)
        on left: 84 85 86 87 88
        on right: 96
    simple_expression (100)
        on left: 89 90 91
        on right: 91 92 93
    expression (101)
        on left: 92 93
        on right: 52 55 56 57 69 92 94 95 100
    expr_list (102)
        on left: 94 95
        on right: 61 71 94
    term (103)
        on left: 96 97
        on right: 89 90 91 96
    factor (104)
        on left: 98 99 100 101 102
        on right: 96 97 102


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENTIFIER LPAREN id_list RPAREN SEMICOLON lblock DOT

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENTIFIER . LPAREN id_list RPAREN SEMICOLON lblock DOT

    LPAREN  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENTIFIER LPAREN . id_list RPAREN SEMICOLON lblock DOT

    IDENTIFIER  shift, and go to state 6

    id_list  go to state 7


State 6

   12 id_list: IDENTIFIER . COMMA id_list
   13        | IDENTIFIER .

    COMMA  shift, and go to state 8

    $default  reduce using rule 13 (id_list)


State 7

    1 program: PROGRAM IDENTIFIER LPAREN id_list . RPAREN SEMICOLON lblock DOT

    RPAREN  shift, and go to state 9


State 8

   12 id_list: IDENTIFIER COMMA . id_list

    IDENTIFIER  shift, and go to state 6

    id_list  go to state 10


State 9

    1 program: PROGRAM IDENTIFIER LPAREN id_list RPAREN . SEMICOLON lblock DOT

    SEMICOLON  shift, and go to state 11


State 10

   12 id_list: IDENTIFIER COMMA id_list .

    $default  reduce using rule 12 (id_list)


State 11

    1 program: PROGRAM IDENTIFIER LPAREN id_list RPAREN SEMICOLON . lblock DOT

    BEGINBEGIN  shift, and go to state 12
    CONST       shift, and go to state 13
    LABEL       shift, and go to state 14
    TYPE        shift, and go to state 15
    VAR         shift, and go to state 16
    PRIV        shift, and go to state 17

    lblock     go to state 18
    cblock     go to state 19
    tblock     go to state 20
    vblock     go to state 21
    block      go to state 22
    privblock  go to state 23


State 12

   48 block: BEGINBEGIN . statement endpart

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 34
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 13

   30 cblock: CONST . cdef_list tblock

    IDENTIFIER  shift, and go to state 38

    cdef       go to state 39
    cdef_list  go to state 40


State 14

   28 lblock: LABEL . numlist SEMICOLON cblock

    NUMBER  shift, and go to state 41

    numlist  go to state 42


State 15

   32 tblock: TYPE . tdef_list vblock

    IDENTIFIER  shift, and go to state 43

    tdef       go to state 44
    tdef_list  go to state 45


State 16

   34 vblock: VAR . vdef_list block

    IDENTIFIER  shift, and go to state 6

    id_list    go to state 46
    vdef_list  go to state 47
    vdef       go to state 48


State 17

   50 privblock: PRIV . DOUBLECOLON BEGINBEGIN statement endpart

    DOUBLECOLON  shift, and go to state 49


State 18

    1 program: PROGRAM IDENTIFIER LPAREN id_list RPAREN SEMICOLON lblock . DOT

    DOT  shift, and go to state 50


State 19

   29 lblock: cblock .

    $default  reduce using rule 29 (lblock)


State 20

   31 cblock: tblock .

    $default  reduce using rule 31 (cblock)


State 21

   33 tblock: vblock .

    $default  reduce using rule 33 (tblock)


State 22

   35 vblock: block .

    $default  reduce using rule 35 (vblock)


State 23

   49 block: privblock .

    $default  reduce using rule 49 (block)


State 24

   61 funcall: IDENTIFIER . LPAREN expr_list RPAREN
   70 variable: IDENTIFIER .

    LPAREN  shift, and go to state 51

    $default  reduce using rule 70 (variable)


State 25

   27 label: NUMBER . COLON statement

    COLON  shift, and go to state 52


State 26

   51 statement: BEGINBEGIN . statement endpart

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 53
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 27

   56 statement: FOR . assignment TO expression DO statement

    IDENTIFIER  shift, and go to state 54

    assignment  go to state 55
    variable    go to state 37


State 28

   58 statement: GOTO . NUMBER

    NUMBER  shift, and go to state 56


State 29

   52 statement: IF . expression THEN statement endif

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 69
    term               go to state 70
    factor             go to state 71


State 30

   57 statement: REPEAT . statement_list UNTIL expression

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    statement_list  go to state 72
    label           go to state 32
    privblock       go to state 33
    statement       go to state 73
    funcall         go to state 35
    assignment      go to state 36
    variable        go to state 37


State 31

   55 statement: WHILE . expression DO statement

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 74
    term               go to state 70
    factor             go to state 71


State 32

   59 statement: label .

    $default  reduce using rule 59 (statement)


State 33

   60 statement: privblock .

    $default  reduce using rule 60 (statement)


State 34

   48 block: BEGINBEGIN statement . endpart

    SEMICOLON  shift, and go to state 75
    END        shift, and go to state 76
    PRIV       shift, and go to state 77

    endpart  go to state 78


State 35

   54 statement: funcall .

    $default  reduce using rule 54 (statement)


State 36

   53 statement: assignment .

    $default  reduce using rule 53 (statement)


State 37

   69 assignment: variable . ASSIGN expression
   71 variable: variable . LBRACKET expr_list RBRACKET
   72         | variable . DOT IDENTIFIER
   73         | variable . POINT

    ASSIGN    shift, and go to state 79
    POINT     shift, and go to state 80
    DOT       shift, and go to state 81
    LBRACKET  shift, and go to state 82


State 38

   16 cdef: IDENTIFIER . EQ constant

    EQ  shift, and go to state 83


State 39

   17 cdef_list: cdef . SEMICOLON cdef_list
   18          | cdef . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 40

   30 cblock: CONST cdef_list . tblock

    BEGINBEGIN  shift, and go to state 12
    TYPE        shift, and go to state 15
    VAR         shift, and go to state 16
    PRIV        shift, and go to state 17

    tblock     go to state 85
    vblock     go to state 21
    block      go to state 22
    privblock  go to state 23


State 41

   14 numlist: NUMBER . COMMA numlist
   15        | NUMBER .

    COMMA  shift, and go to state 86

    $default  reduce using rule 15 (numlist)


State 42

   28 lblock: LABEL numlist . SEMICOLON cblock

    SEMICOLON  shift, and go to state 87


State 43

   19 tdef: IDENTIFIER . EQ type

    EQ  shift, and go to state 88


State 44

   20 tdef_list: tdef . SEMICOLON tdef_list
   21          | tdef . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 45

   32 tblock: TYPE tdef_list . vblock

    BEGINBEGIN  shift, and go to state 12
    VAR         shift, and go to state 16
    PRIV        shift, and go to state 17

    vblock     go to state 90
    block      go to state 22
    privblock  go to state 23


State 46

   38 vdef: id_list . COLON type

    COLON  shift, and go to state 91


State 47

   34 vblock: VAR vdef_list . block

    BEGINBEGIN  shift, and go to state 12
    PRIV        shift, and go to state 17

    block      go to state 92
    privblock  go to state 23


State 48

   36 vdef_list: vdef . SEMICOLON vdef_list
   37          | vdef . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 49

   50 privblock: PRIV DOUBLECOLON . BEGINBEGIN statement endpart

    BEGINBEGIN  shift, and go to state 94


State 50

    1 program: PROGRAM IDENTIFIER LPAREN id_list RPAREN SEMICOLON lblock DOT .

    $default  reduce using rule 1 (program)


State 51

   61 funcall: IDENTIFIER LPAREN . expr_list RPAREN

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 95
    expr_list          go to state 96
    term               go to state 70
    factor             go to state 71


State 52

   27 label: NUMBER COLON . statement

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 97
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 53

   51 statement: BEGINBEGIN statement . endpart

    SEMICOLON  shift, and go to state 75
    END        shift, and go to state 76
    PRIV       shift, and go to state 77

    endpart  go to state 98


State 54

   70 variable: IDENTIFIER .

    $default  reduce using rule 70 (variable)


State 55

   56 statement: FOR assignment . TO expression DO statement

    TO  shift, and go to state 99


State 56

   58 statement: GOTO NUMBER .

    $default  reduce using rule 58 (statement)


State 57

    4 unsigned_constant: STRING .

    $default  reduce using rule 4 (unsigned_constant)


State 58

    2 unsigned_constant: NUMBER .

    $default  reduce using rule 2 (unsigned_constant)


State 59

    5 sign: PLUS .

    $default  reduce using rule 5 (sign)


State 60

    6 sign: MINUS .

    $default  reduce using rule 6 (sign)


State 61

  102 factor: NOT . factor

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    funcall            go to state 66
    variable           go to state 67
    factor             go to state 100


State 62

  100 factor: LPAREN . expression RPAREN

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 101
    term               go to state 70
    factor             go to state 71


State 63

    3 unsigned_constant: NIL .

    $default  reduce using rule 3 (unsigned_constant)


State 64

   98 factor: unsigned_constant .

    $default  reduce using rule 98 (factor)


State 65

   89 simple_expression: sign . term

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    funcall            go to state 66
    variable           go to state 67
    term               go to state 102
    factor             go to state 71


State 66

  101 factor: funcall .

    $default  reduce using rule 101 (factor)


State 67

   71 variable: variable . LBRACKET expr_list RBRACKET
   72         | variable . DOT IDENTIFIER
   73         | variable . POINT
   99 factor: variable .

    POINT     shift, and go to state 80
    DOT       shift, and go to state 81
    LBRACKET  shift, and go to state 82

    $default  reduce using rule 99 (factor)


State 68

   91 simple_expression: simple_expression . plus_op term
   93 expression: simple_expression .

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    OR     shift, and go to state 105

    $default  reduce using rule 93 (expression)

    plus_op  go to state 106


State 69

   52 statement: IF expression . THEN statement endif
   92 expression: expression . compare_op simple_expression

    EQ    shift, and go to state 107
    NE    shift, and go to state 108
    LT    shift, and go to state 109
    LE    shift, and go to state 110
    GE    shift, and go to state 111
    GT    shift, and go to state 112
    IN    shift, and go to state 113
    THEN  shift, and go to state 114

    compare_op  go to state 115


State 70

   90 simple_expression: term .
   96 term: term . times_op factor

    TIMES   shift, and go to state 116
    DIVIDE  shift, and go to state 117
    AND     shift, and go to state 118
    DIV     shift, and go to state 119
    MOD     shift, and go to state 120

    $default  reduce using rule 90 (simple_expression)

    times_op  go to state 121


State 71

   97 term: factor .

    $default  reduce using rule 97 (term)


State 72

   57 statement: REPEAT statement_list . UNTIL expression

    UNTIL  shift, and go to state 122


State 73

   22 statement_list: statement . SEMICOLON statement_list
   23               | statement .

    SEMICOLON  shift, and go to state 123

    $default  reduce using rule 23 (statement_list)


State 74

   55 statement: WHILE expression . DO statement
   92 expression: expression . compare_op simple_expression

    EQ  shift, and go to state 107
    NE  shift, and go to state 108
    LT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111
    GT  shift, and go to state 112
    IN  shift, and go to state 113
    DO  shift, and go to state 124

    compare_op  go to state 115


State 75

   62 endpart: SEMICOLON . statement endpart
   63        | SEMICOLON . END
   66        | SEMICOLON . PRIV DOUBLECOLON END

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    END         shift, and go to state 125
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 126

    label       go to state 32
    privblock   go to state 33
    statement   go to state 127
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 76

   64 endpart: END .

    $default  reduce using rule 64 (endpart)


State 77

   65 endpart: PRIV . DOUBLECOLON END

    DOUBLECOLON  shift, and go to state 128


State 78

   48 block: BEGINBEGIN statement endpart .

    $default  reduce using rule 48 (block)


State 79

   69 assignment: variable ASSIGN . expression

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 129
    term               go to state 70
    factor             go to state 71


State 80

   73 variable: variable POINT .

    $default  reduce using rule 73 (variable)


State 81

   72 variable: variable DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


State 82

   71 variable: variable LBRACKET . expr_list RBRACKET

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 95
    expr_list          go to state 131
    term               go to state 70
    factor             go to state 71


State 83

   16 cdef: IDENTIFIER EQ . constant

    IDENTIFIER  shift, and go to state 132
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60

    sign      go to state 135
    constant  go to state 136


State 84

   17 cdef_list: cdef SEMICOLON . cdef_list
   18          | cdef SEMICOLON .

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 18 (cdef_list)

    cdef       go to state 39
    cdef_list  go to state 137


State 85

   30 cblock: CONST cdef_list tblock .

    $default  reduce using rule 30 (cblock)


State 86

   14 numlist: NUMBER COMMA . numlist

    NUMBER  shift, and go to state 41

    numlist  go to state 138


State 87

   28 lblock: LABEL numlist SEMICOLON . cblock

    BEGINBEGIN  shift, and go to state 12
    CONST       shift, and go to state 13
    TYPE        shift, and go to state 15
    VAR         shift, and go to state 16
    PRIV        shift, and go to state 17

    cblock     go to state 139
    tblock     go to state 20
    vblock     go to state 21
    block      go to state 22
    privblock  go to state 23


State 88

   19 tdef: IDENTIFIER EQ . type

    IDENTIFIER  shift, and go to state 140
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    POINT       shift, and go to state 141
    LPAREN      shift, and go to state 142
    ARRAY       shift, and go to state 143
    RECORD      shift, and go to state 144

    sign         go to state 135
    constant     go to state 145
    type         go to state 146
    simple_type  go to state 147


State 89

   20 tdef_list: tdef SEMICOLON . tdef_list
   21          | tdef SEMICOLON .

    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 21 (tdef_list)

    tdef       go to state 44
    tdef_list  go to state 148


State 90

   32 tblock: TYPE tdef_list vblock .

    $default  reduce using rule 32 (tblock)


State 91

   38 vdef: id_list COLON . type

    IDENTIFIER  shift, and go to state 140
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    POINT       shift, and go to state 141
    LPAREN      shift, and go to state 142
    ARRAY       shift, and go to state 143
    RECORD      shift, and go to state 144

    sign         go to state 135
    constant     go to state 145
    type         go to state 149
    simple_type  go to state 147


State 92

   34 vblock: VAR vdef_list block .

    $default  reduce using rule 34 (vblock)


State 93

   36 vdef_list: vdef SEMICOLON . vdef_list
   37          | vdef SEMICOLON .

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 37 (vdef_list)

    id_list    go to state 46
    vdef_list  go to state 150
    vdef       go to state 48


State 94

   50 privblock: PRIV DOUBLECOLON BEGINBEGIN . statement endpart

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 151
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 95

   92 expression: expression . compare_op simple_expression
   94 expr_list: expression . COMMA expr_list
   95          | expression .

    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    LT     shift, and go to state 109
    LE     shift, and go to state 110
    GE     shift, and go to state 111
    GT     shift, and go to state 112
    IN     shift, and go to state 113
    COMMA  shift, and go to state 152

    $default  reduce using rule 95 (expr_list)

    compare_op  go to state 115


State 96

   61 funcall: IDENTIFIER LPAREN expr_list . RPAREN

    RPAREN  shift, and go to state 153


State 97

   27 label: NUMBER COLON statement .

    $default  reduce using rule 27 (label)


State 98

   51 statement: BEGINBEGIN statement endpart .

    $default  reduce using rule 51 (statement)


State 99

   56 statement: FOR assignment TO . expression DO statement

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 154
    term               go to state 70
    factor             go to state 71


State 100

  102 factor: NOT factor .

    $default  reduce using rule 102 (factor)


State 101

   92 expression: expression . compare_op simple_expression
  100 factor: LPAREN expression . RPAREN

    EQ      shift, and go to state 107
    NE      shift, and go to state 108
    LT      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    GT      shift, and go to state 112
    IN      shift, and go to state 113
    RPAREN  shift, and go to state 155

    compare_op  go to state 115


State 102

   89 simple_expression: sign term .
   96 term: term . times_op factor

    TIMES   shift, and go to state 116
    DIVIDE  shift, and go to state 117
    AND     shift, and go to state 118
    DIV     shift, and go to state 119
    MOD     shift, and go to state 120

    $default  reduce using rule 89 (simple_expression)

    times_op  go to state 121


State 103

   74 plus_op: PLUS .

    $default  reduce using rule 74 (plus_op)


State 104

   75 plus_op: MINUS .

    $default  reduce using rule 75 (plus_op)


State 105

   76 plus_op: OR .

    $default  reduce using rule 76 (plus_op)


State 106

   91 simple_expression: simple_expression plus_op . term

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    funcall            go to state 66
    variable           go to state 67
    term               go to state 156
    factor             go to state 71


State 107

   77 compare_op: EQ .

    $default  reduce using rule 77 (compare_op)


State 108

   80 compare_op: NE .

    $default  reduce using rule 80 (compare_op)


State 109

   78 compare_op: LT .

    $default  reduce using rule 78 (compare_op)


State 110

   81 compare_op: LE .

    $default  reduce using rule 81 (compare_op)


State 111

   82 compare_op: GE .

    $default  reduce using rule 82 (compare_op)


State 112

   79 compare_op: GT .

    $default  reduce using rule 79 (compare_op)


State 113

   83 compare_op: IN .

    $default  reduce using rule 83 (compare_op)


State 114

   52 statement: IF expression THEN . statement endif

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 157
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 115

   92 expression: expression compare_op . simple_expression

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 158
    term               go to state 70
    factor             go to state 71


State 116

   84 times_op: TIMES .

    $default  reduce using rule 84 (times_op)


State 117

   85 times_op: DIVIDE .

    $default  reduce using rule 85 (times_op)


State 118

   88 times_op: AND .

    $default  reduce using rule 88 (times_op)


State 119

   86 times_op: DIV .

    $default  reduce using rule 86 (times_op)


State 120

   87 times_op: MOD .

    $default  reduce using rule 87 (times_op)


State 121

   96 term: term times_op . factor

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    funcall            go to state 66
    variable           go to state 67
    factor             go to state 159


State 122

   57 statement: REPEAT statement_list UNTIL . expression

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 160
    term               go to state 70
    factor             go to state 71


State 123

   22 statement_list: statement SEMICOLON . statement_list

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    statement_list  go to state 161
    label           go to state 32
    privblock       go to state 33
    statement       go to state 73
    funcall         go to state 35
    assignment      go to state 36
    variable        go to state 37


State 124

   55 statement: WHILE expression DO . statement

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 162
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 125

   63 endpart: SEMICOLON END .

    $default  reduce using rule 63 (endpart)


State 126

   50 privblock: PRIV . DOUBLECOLON BEGINBEGIN statement endpart
   66 endpart: SEMICOLON PRIV . DOUBLECOLON END

    DOUBLECOLON  shift, and go to state 163


State 127

   62 endpart: SEMICOLON statement . endpart

    SEMICOLON  shift, and go to state 75
    END        shift, and go to state 76
    PRIV       shift, and go to state 77

    endpart  go to state 164


State 128

   65 endpart: PRIV DOUBLECOLON . END

    END  shift, and go to state 165


State 129

   69 assignment: variable ASSIGN expression .
   92 expression: expression . compare_op simple_expression

    EQ  shift, and go to state 107
    NE  shift, and go to state 108
    LT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111
    GT  shift, and go to state 112
    IN  shift, and go to state 113

    $default  reduce using rule 69 (assignment)

    compare_op  go to state 115


State 130

   72 variable: variable DOT IDENTIFIER .

    $default  reduce using rule 72 (variable)


State 131

   71 variable: variable LBRACKET expr_list . RBRACKET

    RBRACKET  shift, and go to state 166


State 132

    8 constant: IDENTIFIER .

    $default  reduce using rule 8 (constant)


State 133

   11 constant: STRING .

    $default  reduce using rule 11 (constant)


State 134

   10 constant: NUMBER .

    $default  reduce using rule 10 (constant)


State 135

    7 constant: sign . IDENTIFIER
    9         | sign . NUMBER

    IDENTIFIER  shift, and go to state 167
    NUMBER      shift, and go to state 168


State 136

   16 cdef: IDENTIFIER EQ constant .

    $default  reduce using rule 16 (cdef)


State 137

   17 cdef_list: cdef SEMICOLON cdef_list .

    $default  reduce using rule 17 (cdef_list)


State 138

   14 numlist: NUMBER COMMA numlist .

    $default  reduce using rule 14 (numlist)


State 139

   28 lblock: LABEL numlist SEMICOLON cblock .

    $default  reduce using rule 28 (lblock)


State 140

    8 constant: IDENTIFIER .
   45 simple_type: IDENTIFIER .

    DOTDOT    reduce using rule 8 (constant)
    $default  reduce using rule 45 (simple_type)


State 141

   42 type: POINT . IDENTIFIER

    IDENTIFIER  shift, and go to state 169


State 142

   46 simple_type: LPAREN . id_list RPAREN

    IDENTIFIER  shift, and go to state 6

    id_list  go to state 170


State 143

   40 type: ARRAY . LBRACKET simple_type_list RBRACKET OF type

    LBRACKET  shift, and go to state 171


State 144

   41 type: RECORD . field_list END

    IDENTIFIER  shift, and go to state 6

    id_list     go to state 172
    fields      go to state 173
    field_list  go to state 174


State 145

   47 simple_type: constant . DOTDOT constant

    DOTDOT  shift, and go to state 175


State 146

   19 tdef: IDENTIFIER EQ type .

    $default  reduce using rule 19 (tdef)


State 147

   39 type: simple_type .

    $default  reduce using rule 39 (type)


State 148

   20 tdef_list: tdef SEMICOLON tdef_list .

    $default  reduce using rule 20 (tdef_list)


State 149

   38 vdef: id_list COLON type .

    $default  reduce using rule 38 (vdef)


State 150

   36 vdef_list: vdef SEMICOLON vdef_list .

    $default  reduce using rule 36 (vdef_list)


State 151

   50 privblock: PRIV DOUBLECOLON BEGINBEGIN statement . endpart

    SEMICOLON  shift, and go to state 75
    END        shift, and go to state 76
    PRIV       shift, and go to state 77

    endpart  go to state 176


State 152

   94 expr_list: expression COMMA . expr_list

    IDENTIFIER  shift, and go to state 24
    STRING      shift, and go to state 57
    NUMBER      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    NOT         shift, and go to state 61
    LPAREN      shift, and go to state 62
    NIL         shift, and go to state 63

    unsigned_constant  go to state 64
    sign               go to state 65
    funcall            go to state 66
    variable           go to state 67
    simple_expression  go to state 68
    expression         go to state 95
    expr_list          go to state 177
    term               go to state 70
    factor             go to state 71


State 153

   61 funcall: IDENTIFIER LPAREN expr_list RPAREN .

    $default  reduce using rule 61 (funcall)


State 154

   56 statement: FOR assignment TO expression . DO statement
   92 expression: expression . compare_op simple_expression

    EQ  shift, and go to state 107
    NE  shift, and go to state 108
    LT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111
    GT  shift, and go to state 112
    IN  shift, and go to state 113
    DO  shift, and go to state 178

    compare_op  go to state 115


State 155

  100 factor: LPAREN expression RPAREN .

    $default  reduce using rule 100 (factor)


State 156

   91 simple_expression: simple_expression plus_op term .
   96 term: term . times_op factor

    TIMES   shift, and go to state 116
    DIVIDE  shift, and go to state 117
    AND     shift, and go to state 118
    DIV     shift, and go to state 119
    MOD     shift, and go to state 120

    $default  reduce using rule 91 (simple_expression)

    times_op  go to state 121


State 157

   52 statement: IF expression THEN statement . endif

    ELSE  shift, and go to state 179

    ELSE      [reduce using rule 68 (endif)]
    $default  reduce using rule 68 (endif)

    endif  go to state 180


State 158

   91 simple_expression: simple_expression . plus_op term
   92 expression: expression compare_op simple_expression .

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    OR     shift, and go to state 105

    $default  reduce using rule 92 (expression)

    plus_op  go to state 106


State 159

   96 term: term times_op factor .

    $default  reduce using rule 96 (term)


State 160

   57 statement: REPEAT statement_list UNTIL expression .
   92 expression: expression . compare_op simple_expression

    EQ  shift, and go to state 107
    NE  shift, and go to state 108
    LT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111
    GT  shift, and go to state 112
    IN  shift, and go to state 113

    $default  reduce using rule 57 (statement)

    compare_op  go to state 115


State 161

   22 statement_list: statement SEMICOLON statement_list .

    $default  reduce using rule 22 (statement_list)


State 162

   55 statement: WHILE expression DO statement .

    $default  reduce using rule 55 (statement)


State 163

   50 privblock: PRIV DOUBLECOLON . BEGINBEGIN statement endpart
   66 endpart: SEMICOLON PRIV DOUBLECOLON . END

    BEGINBEGIN  shift, and go to state 94
    END         shift, and go to state 181


State 164

   62 endpart: SEMICOLON statement endpart .

    $default  reduce using rule 62 (endpart)


State 165

   65 endpart: PRIV DOUBLECOLON END .

    $default  reduce using rule 65 (endpart)


State 166

   71 variable: variable LBRACKET expr_list RBRACKET .

    $default  reduce using rule 71 (variable)


State 167

    7 constant: sign IDENTIFIER .

    $default  reduce using rule 7 (constant)


State 168

    9 constant: sign NUMBER .

    $default  reduce using rule 9 (constant)


State 169

   42 type: POINT IDENTIFIER .

    $default  reduce using rule 42 (type)


State 170

   46 simple_type: LPAREN id_list . RPAREN

    RPAREN  shift, and go to state 182


State 171

   40 type: ARRAY LBRACKET . simple_type_list RBRACKET OF type

    IDENTIFIER  shift, and go to state 140
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    LPAREN      shift, and go to state 142

    sign              go to state 135
    constant          go to state 145
    simple_type_list  go to state 183
    simple_type       go to state 184


State 172

   24 fields: id_list . COLON type

    COLON  shift, and go to state 185


State 173

   25 field_list: fields . SEMICOLON field_list
   26           | fields .

    SEMICOLON  shift, and go to state 186

    $default  reduce using rule 26 (field_list)


State 174

   41 type: RECORD field_list . END

    END  shift, and go to state 187


State 175

   47 simple_type: constant DOTDOT . constant

    IDENTIFIER  shift, and go to state 132
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60

    sign      go to state 135
    constant  go to state 188


State 176

   50 privblock: PRIV DOUBLECOLON BEGINBEGIN statement endpart .

    $default  reduce using rule 50 (privblock)


State 177

   94 expr_list: expression COMMA expr_list .

    $default  reduce using rule 94 (expr_list)


State 178

   56 statement: FOR assignment TO expression DO . statement

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 189
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 179

   67 endif: ELSE . statement

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25
    BEGINBEGIN  shift, and go to state 26
    FOR         shift, and go to state 27
    GOTO        shift, and go to state 28
    IF          shift, and go to state 29
    REPEAT      shift, and go to state 30
    WHILE       shift, and go to state 31
    PRIV        shift, and go to state 17

    label       go to state 32
    privblock   go to state 33
    statement   go to state 190
    funcall     go to state 35
    assignment  go to state 36
    variable    go to state 37


State 180

   52 statement: IF expression THEN statement endif .

    $default  reduce using rule 52 (statement)


State 181

   66 endpart: SEMICOLON PRIV DOUBLECOLON END .

    $default  reduce using rule 66 (endpart)


State 182

   46 simple_type: LPAREN id_list RPAREN .

    $default  reduce using rule 46 (simple_type)


State 183

   40 type: ARRAY LBRACKET simple_type_list . RBRACKET OF type

    RBRACKET  shift, and go to state 191


State 184

   43 simple_type_list: simple_type . COMMA simple_type_list
   44                 | simple_type .

    COMMA  shift, and go to state 192

    $default  reduce using rule 44 (simple_type_list)


State 185

   24 fields: id_list COLON . type

    IDENTIFIER  shift, and go to state 140
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    POINT       shift, and go to state 141
    LPAREN      shift, and go to state 142
    ARRAY       shift, and go to state 143
    RECORD      shift, and go to state 144

    sign         go to state 135
    constant     go to state 145
    type         go to state 193
    simple_type  go to state 147


State 186

   25 field_list: fields SEMICOLON . field_list

    IDENTIFIER  shift, and go to state 6

    id_list     go to state 172
    fields      go to state 173
    field_list  go to state 194


State 187

   41 type: RECORD field_list END .

    $default  reduce using rule 41 (type)


State 188

   47 simple_type: constant DOTDOT constant .

    $default  reduce using rule 47 (simple_type)


State 189

   56 statement: FOR assignment TO expression DO statement .

    $default  reduce using rule 56 (statement)


State 190

   67 endif: ELSE statement .

    $default  reduce using rule 67 (endif)


State 191

   40 type: ARRAY LBRACKET simple_type_list RBRACKET . OF type

    OF  shift, and go to state 195


State 192

   43 simple_type_list: simple_type COMMA . simple_type_list

    IDENTIFIER  shift, and go to state 140
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    LPAREN      shift, and go to state 142

    sign              go to state 135
    constant          go to state 145
    simple_type_list  go to state 196
    simple_type       go to state 184


State 193

   24 fields: id_list COLON type .

    $default  reduce using rule 24 (fields)


State 194

   25 field_list: fields SEMICOLON field_list .

    $default  reduce using rule 25 (field_list)


State 195

   40 type: ARRAY LBRACKET simple_type_list RBRACKET OF . type

    IDENTIFIER  shift, and go to state 140
    STRING      shift, and go to state 133
    NUMBER      shift, and go to state 134
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    POINT       shift, and go to state 141
    LPAREN      shift, and go to state 142
    ARRAY       shift, and go to state 143
    RECORD      shift, and go to state 144

    sign         go to state 135
    constant     go to state 145
    type         go to state 197
    simple_type  go to state 147


State 196

   43 simple_type_list: simple_type COMMA simple_type_list .

    $default  reduce using rule 43 (simple_type_list)


State 197

   40 type: ARRAY LBRACKET simple_type_list RBRACKET OF type .

    $default  reduce using rule 40 (type)
